{
  "definitions": {
    "Action": {
      "description": "Defines an abstract class for an harvest action",
      "properties": {
        "reward_probability": {
          "$ref": "#/definitions/Distribution",
          "default": {
            "family": "Scalar",
            "distribution_parameters": {
              "family": "Scalar",
              "value": 1.0
            },
            "truncation_parameters": null,
            "scaling_parameters": null
          },
          "description": "Probability of reward"
        },
        "reward_amount": {
          "$ref": "#/definitions/Distribution",
          "default": {
            "family": "Scalar",
            "distribution_parameters": {
              "family": "Scalar",
              "value": 1.0
            },
            "truncation_parameters": null,
            "scaling_parameters": null
          },
          "description": "Amount of reward to be delivered"
        },
        "reward_delay": {
          "$ref": "#/definitions/Distribution",
          "default": {
            "family": "Scalar",
            "distribution_parameters": {
              "family": "Scalar",
              "value": 1.0
            },
            "truncation_parameters": null,
            "scaling_parameters": null
          },
          "description": "Delay between successful harvest and reward delivery"
        },
        "action_duration": {
          "$ref": "#/definitions/Distribution",
          "default": {
            "family": "Scalar",
            "distribution_parameters": {
              "family": "Scalar",
              "value": 0.5
            },
            "truncation_parameters": null,
            "scaling_parameters": null
          },
          "description": "Duration that the action much stay above threshold"
        },
        "upper_action_threshold": {
          "$ref": "#/definitions/Distribution",
          "default": {
            "family": "Scalar",
            "distribution_parameters": {
              "family": "Scalar",
              "value": 20000.0
            },
            "truncation_parameters": null,
            "scaling_parameters": null
          },
          "description": "Upper bound of the cached action required to get reward."
        },
        "lower_action_threshold": {
          "$ref": "#/definitions/Distribution",
          "default": {
            "family": "Scalar",
            "distribution_parameters": {
              "family": "Scalar",
              "value": 0.0
            },
            "truncation_parameters": null,
            "scaling_parameters": null
          },
          "description": "Lower bound of the cached action required to get reward. This determines from which value the action is accumulated from."
        },
        "is_operant": {
          "default": true,
          "description": "Whether the reward delivery is contingent on licking.",
          "title": "Is Operant",
          "type": "boolean"
        },
        "time_to_collect": {
          "default": null,
          "description": "Time to collect the reward after it is available. If null, the reward will be available indefinitely.",
          "oneOf": [
            {
              "$ref": "#/definitions/Distribution"
            },
            {
              "type": "null"
            }
          ]
        },
        "continuous_feedback": {
          "default": null,
          "description": "Continuous feedback settings",
          "oneOf": [
            {
              "$ref": "#/definitions/ContinuousFeedback"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "title": "Action",
      "type": "object"
    },
    "ActionLookUpTableFactory": {
      "properties": {
        "path": {
          "description": "Reference to the look up table image. Should be a 1 channel image. Value = LUT[Left, Right]",
          "title": "Path",
          "type": "string"
        },
        "offset": {
          "default": 0,
          "description": "Offset to add to the look up table value",
          "title": "Offset",
          "type": "number"
        },
        "scale": {
          "default": 1,
          "description": "Scale to multiply the look up table value",
          "title": "Scale",
          "type": "number"
        },
        "action0_min": {
          "description": "The lower value of Action0 used to linearly scale the input coordinate to.",
          "title": "Action0 Min",
          "type": "number"
        },
        "action0_max": {
          "description": "The upper value of Action0 used to linearly scale the input coordinate to.",
          "title": "Action0 Max",
          "type": "number"
        },
        "action1_min": {
          "description": "The lower value of Action1 used to linearly scale the input coordinate to.",
          "title": "Action1 Min",
          "type": "number"
        },
        "action1_max": {
          "description": "The upper value of Action1 used to linearly scale the input coordinate to.",
          "title": "Action1 Max",
          "type": "number"
        }
      },
      "required": [
        "path",
        "action0_min",
        "action0_max",
        "action1_min",
        "action1_max"
      ],
      "title": "ActionLookUpTableFactory",
      "type": "object"
    },
    "ActionSource": {
      "discriminator": {
        "mapping": {
          "BehaviorAnalogInput": "#/definitions/BehaviorAnalogInputActionSource",
          "LoadCell": "#/definitions/LoadCellActionSource"
        },
        "propertyName": "action_source"
      },
      "oneOf": [
        {
          "$ref": "#/definitions/LoadCellActionSource"
        },
        {
          "$ref": "#/definitions/BehaviorAnalogInputActionSource"
        }
      ]
    },
    "AindTelekinesisTaskParameters": {
      "additionalProperties": true,
      "properties": {
        "rng_seed": {
          "default": null,
          "description": "Seed of the random number generator",
          "oneOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "title": "Rng Seed"
        },
        "aind_behavior_services_pkg_version": {
          "default": "0.8.6",
          "pattern": "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$",
          "title": "aind_behavior_services package version",
          "type": "string"
        },
        "environment": {
          "$ref": "#/definitions/Environment",
          "description": "Environment settings"
        },
        "operation_control": {
          "$ref": "#/definitions/OperationControl",
          "description": "Operation control"
        }
      },
      "required": [
        "environment",
        "operation_control"
      ],
      "title": "AindTelekinesisTaskParameters",
      "type": "object"
    },
    "AudioFeedback": {
      "properties": {
        "continuous_feedback_mode": {
          "const": "Audio",
          "default": "Audio",
          "title": "Continuous Feedback Mode",
          "type": "string"
        },
        "converter_lut_input": {
          "default": [
            0,
            1
          ],
          "description": "Normalized input domain. All values should be between 0 and 1",
          "items": {
            "maximum": 1.0,
            "minimum": 0.0,
            "type": "number"
          },
          "minItems": 2,
          "title": "Converter Lut Input",
          "type": "array"
        },
        "converter_lut_output": {
          "default": [
            0,
            1
          ],
          "description": "Output domain used to linearly interpolate the input values to the output values",
          "items": {
            "type": "number"
          },
          "minItems": 2,
          "title": "Converter Lut Output",
          "type": "array"
        }
      },
      "title": "AudioFeedback",
      "type": "object"
    },
    "BehaviorAnalogInputActionSource": {
      "properties": {
        "action_source": {
          "const": "BehaviorAnalogInput",
          "default": "BehaviorAnalogInput",
          "title": "Action Source",
          "type": "string"
        },
        "channel": {
          "default": 0,
          "description": "Index of the behavior analog input channel to use",
          "maximum": 1,
          "minimum": 0,
          "title": "Channel",
          "type": "integer"
        }
      },
      "title": "BehaviorAnalogInputActionSource",
      "type": "object"
    },
    "BetaDistribution": {
      "properties": {
        "family": {
          "const": "Beta",
          "default": "Beta",
          "title": "Family",
          "type": "string"
        },
        "distribution_parameters": {
          "$ref": "#/definitions/BetaDistributionParameters",
          "default": {
            "family": "Beta",
            "alpha": 5.0,
            "beta": 5.0
          },
          "description": "Parameters of the distribution"
        },
        "truncation_parameters": {
          "default": null,
          "description": "Truncation parameters of the distribution",
          "oneOf": [
            {
              "$ref": "#/definitions/TruncationParameters"
            },
            {
              "type": "null"
            }
          ]
        },
        "scaling_parameters": {
          "default": null,
          "description": "Scaling parameters of the distribution",
          "oneOf": [
            {
              "$ref": "#/definitions/ScalingParameters"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "title": "BetaDistribution",
      "type": "object"
    },
    "BetaDistributionParameters": {
      "properties": {
        "family": {
          "const": "Beta",
          "default": "Beta",
          "title": "Family",
          "type": "string"
        },
        "alpha": {
          "default": 5,
          "description": "Alpha parameter of the distribution",
          "minimum": 0.0,
          "title": "Alpha",
          "type": "number"
        },
        "beta": {
          "default": 5,
          "description": "Beta parameter of the distribution",
          "minimum": 0.0,
          "title": "Beta",
          "type": "number"
        }
      },
      "title": "BetaDistributionParameters",
      "type": "object"
    },
    "BinomialDistribution": {
      "properties": {
        "family": {
          "const": "Binomial",
          "default": "Binomial",
          "title": "Family",
          "type": "string"
        },
        "distribution_parameters": {
          "$ref": "#/definitions/BinomialDistributionParameters",
          "default": {
            "family": "Binomial",
            "n": 1,
            "p": 0.5
          },
          "description": "Parameters of the distribution"
        },
        "truncation_parameters": {
          "default": null,
          "description": "Truncation parameters of the distribution",
          "oneOf": [
            {
              "$ref": "#/definitions/TruncationParameters"
            },
            {
              "type": "null"
            }
          ]
        },
        "scaling_parameters": {
          "default": null,
          "description": "Scaling parameters of the distribution",
          "oneOf": [
            {
              "$ref": "#/definitions/ScalingParameters"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "title": "BinomialDistribution",
      "type": "object"
    },
    "BinomialDistributionParameters": {
      "properties": {
        "family": {
          "const": "Binomial",
          "default": "Binomial",
          "title": "Family",
          "type": "string"
        },
        "n": {
          "default": 1,
          "description": "Number of trials",
          "minimum": 0,
          "title": "N",
          "type": "integer"
        },
        "p": {
          "default": 0.5,
          "description": "Probability of success",
          "maximum": 1.0,
          "minimum": 0.0,
          "title": "P",
          "type": "number"
        }
      },
      "title": "BinomialDistributionParameters",
      "type": "object"
    },
    "Block": {
      "properties": {
        "mode": {
          "const": "Block",
          "default": "Block",
          "title": "Mode",
          "type": "string"
        },
        "trials": {
          "default": [],
          "description": "List of trials in the block",
          "items": {
            "$ref": "#/definitions/Trial"
          },
          "title": "Trials",
          "type": "array"
        },
        "shuffle": {
          "default": false,
          "description": "Whether to shuffle the trials in the block",
          "title": "Shuffle",
          "type": "boolean"
        },
        "repeat_count": {
          "default": 0,
          "description": "Number of times to repeat the block. If null, the block will be repeated indefinitely",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "title": "Repeat Count"
        }
      },
      "title": "Block",
      "type": "object"
    },
    "BlockGenerator": {
      "properties": {
        "mode": {
          "const": "BlockGenerator",
          "default": "BlockGenerator",
          "title": "Mode",
          "type": "string"
        },
        "block_size": {
          "$ref": "#/definitions/Distribution",
          "default": {
            "family": "Uniform",
            "distribution_parameters": {
              "family": "Uniform",
              "max": 60.0,
              "min": 50.0
            },
            "truncation_parameters": null,
            "scaling_parameters": null
          },
          "description": "Size of the block"
        },
        "trial_statistics": {
          "$ref": "#/definitions/Trial",
          "description": "Statistics of the trials in the block"
        }
      },
      "required": [
        "trial_statistics"
      ],
      "title": "BlockGenerator",
      "type": "object"
    },
    "BlockStatistics": {
      "discriminator": {
        "mapping": {
          "Block": "#/definitions/Block",
          "BlockGenerator": "#/definitions/BlockGenerator"
        },
        "propertyName": "mode"
      },
      "oneOf": [
        {
          "$ref": "#/definitions/Block"
        },
        {
          "$ref": "#/definitions/BlockGenerator"
        }
      ]
    },
    "ContinuousFeedback": {
      "discriminator": {
        "mapping": {
          "Audio": "#/definitions/AudioFeedback",
          "Manipulator": "#/definitions/ManipulatorFeedback"
        },
        "propertyName": "continuous_feedback_mode"
      },
      "oneOf": [
        {
          "$ref": "#/definitions/ManipulatorFeedback"
        },
        {
          "$ref": "#/definitions/AudioFeedback"
        }
      ]
    },
    "Distribution": {
      "discriminator": {
        "mapping": {
          "Beta": "#/definitions/BetaDistribution",
          "Binomial": "#/definitions/BinomialDistribution",
          "Exponential": "#/definitions/ExponentialDistribution",
          "Gamma": "#/definitions/GammaDistribution",
          "LogNormal": "#/definitions/LogNormalDistribution",
          "Normal": "#/definitions/NormalDistribution",
          "Pdf": "#/definitions/PdfDistribution",
          "Poisson": "#/definitions/PoissonDistribution",
          "Scalar": "#/definitions/Scalar",
          "Uniform": "#/definitions/UniformDistribution"
        },
        "propertyName": "family"
      },
      "oneOf": [
        {
          "$ref": "#/definitions/Scalar"
        },
        {
          "$ref": "#/definitions/NormalDistribution"
        },
        {
          "$ref": "#/definitions/LogNormalDistribution"
        },
        {
          "$ref": "#/definitions/ExponentialDistribution"
        },
        {
          "$ref": "#/definitions/UniformDistribution"
        },
        {
          "$ref": "#/definitions/PoissonDistribution"
        },
        {
          "$ref": "#/definitions/BinomialDistribution"
        },
        {
          "$ref": "#/definitions/BetaDistribution"
        },
        {
          "$ref": "#/definitions/GammaDistribution"
        },
        {
          "$ref": "#/definitions/PdfDistribution"
        }
      ]
    },
    "Environment": {
      "properties": {
        "block_statistics": {
          "description": "Statistics of the environment",
          "items": {
            "$ref": "#/definitions/BlockStatistics"
          },
          "title": "Block Statistics",
          "type": "array"
        },
        "shuffle": {
          "default": false,
          "description": "Whether to shuffle the blocks",
          "title": "Shuffle",
          "type": "boolean"
        },
        "repeat_count": {
          "default": 0,
          "description": "Number of times to repeat the environment. If null, the environment will be repeated indefinitely",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "title": "Repeat Count"
        }
      },
      "required": [
        "block_statistics"
      ],
      "title": "Environment",
      "type": "object"
    },
    "ExponentialDistribution": {
      "properties": {
        "family": {
          "const": "Exponential",
          "default": "Exponential",
          "title": "Family",
          "type": "string"
        },
        "distribution_parameters": {
          "$ref": "#/definitions/ExponentialDistributionParameters",
          "default": {
            "family": "Exponential",
            "rate": 0.0
          },
          "description": "Parameters of the distribution"
        },
        "truncation_parameters": {
          "default": null,
          "description": "Truncation parameters of the distribution",
          "oneOf": [
            {
              "$ref": "#/definitions/TruncationParameters"
            },
            {
              "type": "null"
            }
          ]
        },
        "scaling_parameters": {
          "default": null,
          "description": "Scaling parameters of the distribution",
          "oneOf": [
            {
              "$ref": "#/definitions/ScalingParameters"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "title": "ExponentialDistribution",
      "type": "object"
    },
    "ExponentialDistributionParameters": {
      "properties": {
        "family": {
          "const": "Exponential",
          "default": "Exponential",
          "title": "Family",
          "type": "string"
        },
        "rate": {
          "default": 0,
          "description": "Rate parameter of the distribution",
          "minimum": 0.0,
          "title": "Rate",
          "type": "number"
        }
      },
      "title": "ExponentialDistributionParameters",
      "type": "object"
    },
    "GammaDistribution": {
      "properties": {
        "family": {
          "const": "Gamma",
          "default": "Gamma",
          "title": "Family",
          "type": "string"
        },
        "distribution_parameters": {
          "$ref": "#/definitions/GammaDistributionParameters",
          "default": {
            "family": "Gamma",
            "shape": 1.0,
            "rate": 1.0
          },
          "description": "Parameters of the distribution"
        },
        "truncation_parameters": {
          "default": null,
          "description": "Truncation parameters of the distribution",
          "oneOf": [
            {
              "$ref": "#/definitions/TruncationParameters"
            },
            {
              "type": "null"
            }
          ]
        },
        "scaling_parameters": {
          "default": null,
          "description": "Scaling parameters of the distribution",
          "oneOf": [
            {
              "$ref": "#/definitions/ScalingParameters"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "title": "GammaDistribution",
      "type": "object"
    },
    "GammaDistributionParameters": {
      "properties": {
        "family": {
          "const": "Gamma",
          "default": "Gamma",
          "title": "Family",
          "type": "string"
        },
        "shape": {
          "default": 1,
          "description": "Shape parameter of the distribution",
          "minimum": 0.0,
          "title": "Shape",
          "type": "number"
        },
        "rate": {
          "default": 1,
          "description": "Rate parameter of the distribution",
          "minimum": 0.0,
          "title": "Rate",
          "type": "number"
        }
      },
      "title": "GammaDistributionParameters",
      "type": "object"
    },
    "LoadCellActionSource": {
      "properties": {
        "action_source": {
          "const": "LoadCell",
          "default": "LoadCell",
          "title": "Action Source",
          "type": "string"
        },
        "channel": {
          "default": 0,
          "description": "Index of the load cell channel to use",
          "maximum": 7,
          "minimum": 0,
          "title": "Channel",
          "type": "integer"
        }
      },
      "title": "LoadCellActionSource",
      "type": "object"
    },
    "LogNormalDistribution": {
      "properties": {
        "family": {
          "const": "LogNormal",
          "default": "LogNormal",
          "title": "Family",
          "type": "string"
        },
        "distribution_parameters": {
          "$ref": "#/definitions/LogNormalDistributionParameters",
          "default": {
            "family": "LogNormal",
            "mean": 0.0,
            "std": 0.0
          },
          "description": "Parameters of the distribution"
        },
        "truncation_parameters": {
          "default": null,
          "description": "Truncation parameters of the distribution",
          "oneOf": [
            {
              "$ref": "#/definitions/TruncationParameters"
            },
            {
              "type": "null"
            }
          ]
        },
        "scaling_parameters": {
          "default": null,
          "description": "Scaling parameters of the distribution",
          "oneOf": [
            {
              "$ref": "#/definitions/ScalingParameters"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "title": "LogNormalDistribution",
      "type": "object"
    },
    "LogNormalDistributionParameters": {
      "properties": {
        "family": {
          "const": "LogNormal",
          "default": "LogNormal",
          "title": "Family",
          "type": "string"
        },
        "mean": {
          "default": 0,
          "description": "Mean of the distribution",
          "title": "Mean",
          "type": "number"
        },
        "std": {
          "default": 0,
          "description": "Standard deviation of the distribution",
          "title": "Std",
          "type": "number"
        }
      },
      "title": "LogNormalDistributionParameters",
      "type": "object"
    },
    "ManipulatorFeedback": {
      "properties": {
        "continuous_feedback_mode": {
          "const": "Manipulator",
          "default": "Manipulator",
          "title": "Continuous Feedback Mode",
          "type": "string"
        },
        "converter_lut_input": {
          "default": [
            0,
            1
          ],
          "description": "Normalized input domain. All values should be between 0 and 1",
          "items": {
            "maximum": 1.0,
            "minimum": 0.0,
            "type": "number"
          },
          "minItems": 2,
          "title": "Converter Lut Input",
          "type": "array"
        },
        "converter_lut_output": {
          "default": [
            0,
            1
          ],
          "description": "Output domain used to linearly interpolate the input values to the output values",
          "items": {
            "type": "number"
          },
          "minItems": 2,
          "title": "Converter Lut Output",
          "type": "array"
        }
      },
      "title": "ManipulatorFeedback",
      "type": "object"
    },
    "NormalDistribution": {
      "properties": {
        "family": {
          "const": "Normal",
          "default": "Normal",
          "title": "Family",
          "type": "string"
        },
        "distribution_parameters": {
          "$ref": "#/definitions/NormalDistributionParameters",
          "default": {
            "family": "Normal",
            "mean": 0.0,
            "std": 0.0
          },
          "description": "Parameters of the distribution"
        },
        "truncation_parameters": {
          "default": null,
          "description": "Truncation parameters of the distribution",
          "oneOf": [
            {
              "$ref": "#/definitions/TruncationParameters"
            },
            {
              "type": "null"
            }
          ]
        },
        "scaling_parameters": {
          "default": null,
          "description": "Scaling parameters of the distribution",
          "oneOf": [
            {
              "$ref": "#/definitions/ScalingParameters"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "title": "NormalDistribution",
      "type": "object"
    },
    "NormalDistributionParameters": {
      "properties": {
        "family": {
          "const": "Normal",
          "default": "Normal",
          "title": "Family",
          "type": "string"
        },
        "mean": {
          "default": 0,
          "description": "Mean of the distribution",
          "title": "Mean",
          "type": "number"
        },
        "std": {
          "default": 0,
          "description": "Standard deviation of the distribution",
          "title": "Std",
          "type": "number"
        }
      },
      "title": "NormalDistributionParameters",
      "type": "object"
    },
    "OperationControl": {
      "properties": {
        "action_luts": {
          "additionalProperties": {
            "$ref": "#/definitions/ActionLookUpTableFactory"
          },
          "description": "Look up tables to derive action output from.",
          "title": "Action Luts",
          "type": "object"
        },
        "spout": {
          "$ref": "#/definitions/SpoutOperationControl",
          "default": {
            "default_retracted_position": 0.0,
            "default_extended_position": 0.0,
            "enabled": true
          },
          "description": "Operation control for spout"
        }
      },
      "required": [
        "action_luts"
      ],
      "title": "OperationControl",
      "type": "object"
    },
    "PdfDistribution": {
      "properties": {
        "family": {
          "const": "Pdf",
          "default": "Pdf",
          "title": "Family",
          "type": "string"
        },
        "distribution_parameters": {
          "$ref": "#/definitions/PdfDistributionParameters",
          "default": {
            "family": "Pdf",
            "pdf": [
              1.0
            ],
            "index": [
              0.0
            ]
          },
          "description": "Parameters of the distribution"
        },
        "truncation_parameters": {
          "default": null,
          "description": "Truncation parameters of the distribution",
          "oneOf": [
            {
              "$ref": "#/definitions/TruncationParameters"
            },
            {
              "type": "null"
            }
          ]
        },
        "scaling_parameters": {
          "default": null,
          "description": "Scaling parameters of the distribution",
          "oneOf": [
            {
              "$ref": "#/definitions/ScalingParameters"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "title": "PdfDistribution",
      "type": "object"
    },
    "PdfDistributionParameters": {
      "properties": {
        "family": {
          "const": "Pdf",
          "default": "Pdf",
          "title": "Family",
          "type": "string"
        },
        "pdf": {
          "default": [
            1
          ],
          "description": "The probability density function",
          "items": {
            "minimum": 0.0,
            "type": "number"
          },
          "title": "Pdf",
          "type": "array"
        },
        "index": {
          "default": [
            0
          ],
          "description": "The index of the probability density function",
          "items": {
            "type": "number"
          },
          "title": "Index",
          "type": "array"
        }
      },
      "title": "PdfDistributionParameters",
      "type": "object"
    },
    "PoissonDistribution": {
      "properties": {
        "family": {
          "const": "Poisson",
          "default": "Poisson",
          "title": "Family",
          "type": "string"
        },
        "distribution_parameters": {
          "$ref": "#/definitions/PoissonDistributionParameters",
          "default": {
            "family": "Poisson",
            "rate": 1.0
          },
          "description": "Parameters of the distribution"
        },
        "truncation_parameters": {
          "default": null,
          "description": "Truncation parameters of the distribution",
          "oneOf": [
            {
              "$ref": "#/definitions/TruncationParameters"
            },
            {
              "type": "null"
            }
          ]
        },
        "scaling_parameters": {
          "default": null,
          "description": "Scaling parameters of the distribution",
          "oneOf": [
            {
              "$ref": "#/definitions/ScalingParameters"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "title": "PoissonDistribution",
      "type": "object"
    },
    "PoissonDistributionParameters": {
      "properties": {
        "family": {
          "const": "Poisson",
          "default": "Poisson",
          "title": "Family",
          "type": "string"
        },
        "rate": {
          "default": 1,
          "description": "Rate parameter of the Poisson process that generates the distribution",
          "minimum": 0.0,
          "title": "Rate",
          "type": "number"
        }
      },
      "title": "PoissonDistributionParameters",
      "type": "object"
    },
    "QuiescencePeriod": {
      "description": "Defines a quiescence settings",
      "properties": {
        "duration": {
          "$ref": "#/definitions/Distribution",
          "default": {
            "family": "Scalar",
            "distribution_parameters": {
              "family": "Scalar",
              "value": 0.5
            },
            "truncation_parameters": null,
            "scaling_parameters": null
          },
          "description": "Duration of the quiescence period"
        },
        "action_threshold": {
          "default": 0,
          "description": "Time out for the quiescence period",
          "title": "Action Threshold",
          "type": "number"
        },
        "has_cue": {
          "default": false,
          "description": "Whether to use a cue to signal the start of the period.",
          "title": "Has Cue",
          "type": "boolean"
        }
      },
      "title": "QuiescencePeriod",
      "type": "object"
    },
    "ResponsePeriod": {
      "description": "Defines a response period",
      "properties": {
        "duration": {
          "$ref": "#/definitions/Distribution",
          "default": {
            "family": "Scalar",
            "distribution_parameters": {
              "family": "Scalar",
              "value": 0.5
            },
            "truncation_parameters": null,
            "scaling_parameters": null
          },
          "description": "Duration of the response period. I.e. the time the animal has to make a choice."
        },
        "has_cue": {
          "default": true,
          "description": "Whether to use a cue to signal the start of the period.",
          "title": "Has Cue",
          "type": "boolean"
        },
        "action": {
          "$ref": "#/definitions/Action",
          "default": {
            "reward_probability": {
              "distribution_parameters": {
                "family": "Scalar",
                "value": 1.0
              },
              "family": "Scalar",
              "scaling_parameters": null,
              "truncation_parameters": null
            },
            "reward_amount": {
              "distribution_parameters": {
                "family": "Scalar",
                "value": 1.0
              },
              "family": "Scalar",
              "scaling_parameters": null,
              "truncation_parameters": null
            },
            "reward_delay": {
              "distribution_parameters": {
                "family": "Scalar",
                "value": 1.0
              },
              "family": "Scalar",
              "scaling_parameters": null,
              "truncation_parameters": null
            },
            "action_duration": {
              "distribution_parameters": {
                "family": "Scalar",
                "value": 0.5
              },
              "family": "Scalar",
              "scaling_parameters": null,
              "truncation_parameters": null
            },
            "upper_action_threshold": {
              "distribution_parameters": {
                "family": "Scalar",
                "value": 20000.0
              },
              "family": "Scalar",
              "scaling_parameters": null,
              "truncation_parameters": null
            },
            "lower_action_threshold": {
              "distribution_parameters": {
                "family": "Scalar",
                "value": 0.0
              },
              "family": "Scalar",
              "scaling_parameters": null,
              "truncation_parameters": null
            },
            "is_operant": true,
            "time_to_collect": null,
            "continuous_feedback": null
          },
          "description": "Action to be performed during the response period"
        }
      },
      "title": "ResponsePeriod",
      "type": "object"
    },
    "Scalar": {
      "properties": {
        "family": {
          "const": "Scalar",
          "default": "Scalar",
          "title": "Family",
          "type": "string"
        },
        "distribution_parameters": {
          "$ref": "#/definitions/ScalarDistributionParameter",
          "default": {
            "family": "Scalar",
            "value": 0.0
          },
          "description": "Parameters of the distribution"
        },
        "truncation_parameters": {
          "const": null,
          "default": null,
          "title": "Truncation Parameters",
          "type": "null"
        },
        "scaling_parameters": {
          "const": null,
          "default": null,
          "title": "Scaling Parameters",
          "type": "null"
        }
      },
      "title": "Scalar",
      "type": "object"
    },
    "ScalarDistributionParameter": {
      "properties": {
        "family": {
          "const": "Scalar",
          "default": "Scalar",
          "title": "Family",
          "type": "string"
        },
        "value": {
          "default": 0,
          "description": "The static value of the distribution",
          "title": "Value",
          "type": "number"
        }
      },
      "title": "ScalarDistributionParameter",
      "type": "object"
    },
    "ScalingParameters": {
      "properties": {
        "scale": {
          "default": 1,
          "description": "Scaling factor to apply on the sampled distribution",
          "title": "Scale",
          "type": "number"
        },
        "offset": {
          "default": 0,
          "description": "Offset factor to apply on the sampled distribution",
          "title": "Offset",
          "type": "number"
        }
      },
      "title": "ScalingParameters",
      "type": "object"
    },
    "SpoutOperationControl": {
      "properties": {
        "default_retracted_position": {
          "default": 0,
          "description": "Default retracted position (mm)",
          "title": "Default Retracted Position",
          "type": "number"
        },
        "default_extended_position": {
          "default": 0,
          "description": "Default extended position (mm)",
          "title": "Default Extended Position",
          "type": "number"
        },
        "enabled": {
          "default": true,
          "description": "Whether the spout control is enabled",
          "title": "Enabled",
          "type": "boolean"
        }
      },
      "title": "SpoutOperationControl",
      "type": "object"
    },
    "Trial": {
      "description": "Defines a trial",
      "properties": {
        "inter_trial_interval": {
          "$ref": "#/definitions/Distribution",
          "default": {
            "family": "Scalar",
            "distribution_parameters": {
              "family": "Scalar",
              "value": 0.5
            },
            "truncation_parameters": null,
            "scaling_parameters": null
          },
          "description": "Time between trials"
        },
        "quiescence_period": {
          "default": null,
          "description": "Quiescence settings",
          "oneOf": [
            {
              "$ref": "#/definitions/QuiescencePeriod"
            },
            {
              "type": "null"
            }
          ]
        },
        "response_period": {
          "$ref": "#/definitions/ResponsePeriod",
          "default": {
            "duration": {
              "distribution_parameters": {
                "family": "Scalar",
                "value": 0.5
              },
              "family": "Scalar",
              "scaling_parameters": null,
              "truncation_parameters": null
            },
            "has_cue": true,
            "action": {
              "action_duration": {
                "distribution_parameters": {
                  "family": "Scalar",
                  "value": 0.5
                },
                "family": "Scalar",
                "scaling_parameters": null,
                "truncation_parameters": null
              },
              "continuous_feedback": null,
              "is_operant": true,
              "lower_action_threshold": {
                "distribution_parameters": {
                  "family": "Scalar",
                  "value": 0.0
                },
                "family": "Scalar",
                "scaling_parameters": null,
                "truncation_parameters": null
              },
              "reward_amount": {
                "distribution_parameters": {
                  "family": "Scalar",
                  "value": 1.0
                },
                "family": "Scalar",
                "scaling_parameters": null,
                "truncation_parameters": null
              },
              "reward_delay": {
                "distribution_parameters": {
                  "family": "Scalar",
                  "value": 1.0
                },
                "family": "Scalar",
                "scaling_parameters": null,
                "truncation_parameters": null
              },
              "reward_probability": {
                "distribution_parameters": {
                  "family": "Scalar",
                  "value": 1.0
                },
                "family": "Scalar",
                "scaling_parameters": null,
                "truncation_parameters": null
              },
              "time_to_collect": null,
              "upper_action_threshold": {
                "distribution_parameters": {
                  "family": "Scalar",
                  "value": 20000.0
                },
                "family": "Scalar",
                "scaling_parameters": null,
                "truncation_parameters": null
              }
            }
          },
          "description": "Response settings"
        },
        "action_source_0": {
          "$ref": "#/definitions/ActionSource",
          "description": "Action source for the first axis to be sample from the LUT"
        },
        "action_source_1": {
          "default": null,
          "description": "Action source for the second axis to be sample from the LUT. If None, LUT will be sampled from [action_source_0, 0]",
          "oneOf": [
            {
              "$ref": "#/definitions/ActionSource"
            },
            {
              "type": "null"
            }
          ]
        },
        "lut_reference": {
          "description": "Reference to the look up table image. Should be a key in the action_luts dictionary",
          "title": "Lut Reference",
          "type": "string"
        }
      },
      "required": [
        "action_source_0",
        "lut_reference"
      ],
      "title": "Trial",
      "type": "object"
    },
    "TruncationParameters": {
      "properties": {
        "is_truncated": {
          "default": false,
          "description": "Whether the distribution is truncated",
          "title": "Is Truncated",
          "type": "boolean"
        },
        "min": {
          "default": 0,
          "description": "Minimum value of the sampled distribution",
          "title": "Min",
          "type": "number"
        },
        "max": {
          "default": 0,
          "description": "Maximum value of the sampled distribution",
          "title": "Max",
          "type": "number"
        }
      },
      "title": "TruncationParameters",
      "type": "object"
    },
    "UniformDistribution": {
      "properties": {
        "family": {
          "const": "Uniform",
          "default": "Uniform",
          "title": "Family",
          "type": "string"
        },
        "distribution_parameters": {
          "$ref": "#/definitions/UniformDistributionParameters",
          "default": {
            "family": "Uniform",
            "min": 0.0,
            "max": 0.0
          },
          "description": "Parameters of the distribution"
        },
        "truncation_parameters": {
          "default": null,
          "description": "Truncation parameters of the distribution",
          "oneOf": [
            {
              "$ref": "#/definitions/TruncationParameters"
            },
            {
              "type": "null"
            }
          ]
        },
        "scaling_parameters": {
          "default": null,
          "description": "Scaling parameters of the distribution",
          "oneOf": [
            {
              "$ref": "#/definitions/ScalingParameters"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "title": "UniformDistribution",
      "type": "object"
    },
    "UniformDistributionParameters": {
      "properties": {
        "family": {
          "const": "Uniform",
          "default": "Uniform",
          "title": "Family",
          "type": "string"
        },
        "min": {
          "default": 0,
          "description": "Minimum value of the distribution",
          "title": "Min",
          "type": "number"
        },
        "max": {
          "default": 0,
          "description": "Maximum value of the distribution",
          "title": "Max",
          "type": "number"
        }
      },
      "title": "UniformDistributionParameters",
      "type": "object"
    }
  },
  "additionalProperties": false,
  "properties": {
    "name": {
      "default": "AindTelekinesis",
      "description": "Name of the task logic",
      "title": "Name",
      "type": "string"
    },
    "description": {
      "default": "",
      "description": "Description of the task.",
      "title": "Description",
      "type": "string"
    },
    "task_parameters": {
      "$ref": "#/definitions/AindTelekinesisTaskParameters",
      "description": "Parameters of the task logic"
    },
    "version": {
      "const": "0.1.0",
      "default": "0.1.0",
      "title": "Version",
      "type": "string"
    },
    "stage_name": {
      "default": null,
      "description": "Optional stage name the `Task` object instance represents.",
      "oneOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "title": "Stage Name"
    }
  },
  "required": [
    "task_parameters"
  ],
  "title": "AindTelekinesisTaskLogic",
  "type": "object"
}